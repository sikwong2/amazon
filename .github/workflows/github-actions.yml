name: Node.js CI

on:
  push:
    branches: [ "ci" ]
  pull_request:
    branches: [ "ci" ]

env:
  POSTGRES_HOST: localhost
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_TEST_DATABASE }}
  POSTGRES_ACCOUNT_DATABASE: ${{ secrets.POSTGRES_TEST_DATABASE }}
  POSTGRES_PRODUCT_DATABASE: ${{ secrets.POSTGRES_TEST_DATABASE }}
  POSTGRES_ORDER_DATABASE: ${{ secrets.POSTGRES_TEST_DATABASE }}
  ACCOUNT_SERVICE_PORT: ${{ secrets.ACCOUNT_SERVICE_PORT }}
  PRODUCT_SERVICE_PORT: ${{ secrets.PRODUCT_SERVICE_PORT }}
  ORDER_SERVICE_PORT: ${{ secrets.ORDER_SERVICE_PORT }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
            POSTGRES_HOST: localhost
            POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ secrets.POSTGRES_TEST_DATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: ['lts/*']

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm run installs
    - run: npm run test